par("bg" = "gray")
png(filename = "plot1.png", width = 480, height = 480, units = "px")
hist(PowerDataFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Globa Active Power (kilowatts)", border = "gray")
dev.off()
par("bg")
hist(PowerDataFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Globa Active Power (kilowatts)", border = "gray")
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
par("bg" = "gray")
png(filename = "plot1.png", width = 480, height = 480, units = "px")
hist(PowerDataFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Globa Active Power (kilowatts)", border = "gray")
dev.off()
destFile <- "power_consumption.zip"
plot(PowerDataFeb$Date, PowerDataFeb$Global_active_power, col = "red")
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "red")
par("gb" = "white")
par("bg" = "white")
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "red")
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)")
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, c(PowerDataFeb$Sub_metering_1, PowerDataFeb$Sub_metering_2, PowerDataFeb$Sub_metering_3), type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1 ~ PowerDataFeb$Sub_metering_3, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot2.png", width = 480, height = 480, units = "px")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
dev.off()
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot1.png", width = 480, height = 480, units = "px")
hist(PowerDataFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Globa Active Power (kilowatts)", border = "gray")
dev.off()
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot2.png", width = 480, height = 480, units = "px")
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
dev.off()
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot3.png", width = 480, height = 480, units = "px")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
dev.off()
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"))#, lty = "l")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), pch = 1 lty = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), pch = 1, lty = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), pch = 2, lty = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), pch = 1, lty = 1)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot3.png", width = 480, height = 480, units = "px")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
dev.off()
Sys.setlocale("LC_TIME", "English")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot1.png", width = 480, height = 480, units = "px")
hist(PowerDataFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Globa Active Power (kilowatts)", border = "gray")
dev.off()
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot2.png", width = 480, height = 480, units = "px")
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
dev.off()
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot3.png", width = 480, height = 480, units = "px")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
dev.off()
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power (kilowatts)", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), fill = "white", col = c("black", "red", "blue"), border = "white", lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), border = "white", lty = 1)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), border = "white", lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", 0.9, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright", 1.9, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend(-1, 1.9, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend(1, 1.9, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend(1, 0.9, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright",inset=.02, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
#set my working directory
setwd("C:/Users/soloveynv/Documents/R Scripts/Coursera/ExData_Plotting1")
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
png(filename = "plot4.png", width = 480, height = 480, units = "px")
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright",inset=.01, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
dev.off()
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright",inset=.001, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
op=par(mfrow=c(2,2))
plot(PowerDataFeb$Time, PowerDataFeb$Global_active_power, type = "l", col = "black", ylab = "Globa Active Power", xlab = "")
plot(PowerDataFeb$Time, PowerDataFeb$Voltage, type = "l", col = "black", ylab = "Voltage", xlab = "datetime")
plot(PowerDataFeb$Time, PowerDataFeb$Sub_metering_1, type = "l", col = "black", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_2, type = "l", col = "red", ylab = "Energy sub metering", xlab = "")
lines(PowerDataFeb$Time, PowerDataFeb$Sub_metering_3, type = "l", col = "blue", ylab = "Energy sub metering", xlab = "")
legend("topright",inset=.01, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), box.lty=0, lty = 1)
plot(PowerDataFeb$Time, PowerDataFeb$Global_reactive_power, type = "l", col = "black", ylab = "Global_reactive_power", xlab = "datetime")
par(op)
#Work in default working directory
#Download file, unzip it if it does not exist
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destFile <- "power_consumption.zip"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
unzip(destFile)
}
#Try to read subset of data using SQL methods(just for practice)
library(RSQLite)
# Create/Connect to a database
con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
# read txt file into temp sql database
dbWriteTable(con, name="household_power_consumption", value="household_power_consumption.txt",
row.names=F, header=T, sep = ";")
# Query your data as you like
PowerDataFeb <- dbGetQuery(con, "SELECT * FROM household_power_consumption WHERE (Date = '1/2/2007' or Date = '2/2/2007')")
#Close connection
dbDisconnect(con)
#Convert the Date and Time variables to Date/Time classes
PowerDataFeb$Date <- as.Date(PowerDataFeb$Date, format = "%d/%m/%Y")
PowerDataFeb$timetemp <- paste(PowerDataFeb$Date, PowerDataFeb$Time)
PowerDataFeb$Time <- strptime(PowerDataFeb$timetemp, format = "%Y-%m-%d %H:%M:%S")
#Open graphic device PNG and Draw figure Histogram
png(filename = "plot1.png", width = 480, height = 480, units = "px")
hist(PowerDataFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Globa Active Power (kilowatts)", border = "gray")
dev.off()
hist(PowerDataFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Globa Active Power (kilowatts)", border = "gray")
hist(PowerDataFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Globa Active Power (kilowatts)")
